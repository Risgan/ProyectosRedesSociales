@page "/"
@using Pomodoro.Components.Models
@using Pomodoro.Components.Services.Interfaces
@inject IConfiguracionService ConfigService;
@inject ITimerService TimerService;
@inject ISecuenciaService SecuenciaService;
@inject NavigationManager NavigationManager;

 @if (estado != Secuencia.Empezar)
{  
    <div class="botones">
        <button class="btn btn-primary radius" @onclick="Pausar">Pause</button>
        <button class="btn btn-danger radius" @onclick="Detener">Detener</button>
    </div>
}

<div class="contenedor @colorClass" @onclick="Pausar">
    <div class="pomodoro">
        <div class="target">
            <div class="contador">
                @if (tiempo.Hours > 0)
                {
                    @tiempo.ToString(@"hh\:mm\:ss")
                }
                else if (tiempo.Minutes > 0)
                {
                    @tiempo.ToString(@"mm\:ss")
                }
                else
                {
                    @tiempo.ToString(@"ss")
                }
            </div>
            <div class="estado">
                @SecuenciaNombres.Where(data => data.Key == estado).FirstOrDefault().Value
            </div>
            @if (estado == Secuencia.Empezar)
            {        
                <div class="texto">
                    <h4>Toque la  pantalla para comenzar</h4>
                </div>
            }
        </div>
    </div>    
</div>

<div class="configuracion">
    <i @onclick="Config" class="bi bi-gear-fill"></i>
</div>

@code {
    private string colorClass;
    private Configuracion configuracion;

    private int hours = 0;
    private int minuts = 1;
    private int seconds = 3;

    private Secuencia estado = Secuencia.Empezar;
    private TimeSpan tiempo;
    private int secuenciaId = 0;

    private System.Threading.Timer timer;

    private Dictionary<Secuencia, string> SecuenciaNombres = new()
    {
        { Secuencia.Empezar,       "Empezar" },
        { Secuencia.Trabajo,       "Trabajo" },
        { Secuencia.DescansoCorto, "Descanso Corto" },
        { Secuencia.DescansoLargo, "Descanso Largo" },
        { Secuencia.Finalizado,    "Finalizado" }
    };

    protected override void OnInitialized()
    {
        colorClass = "colorRed";
        configuracion = ConfigService.GetConfiguracion();
        tiempo = new TimeSpan(hours, minuts, seconds);
        estado = SecuenciaService.GetEjecucionById(secuenciaId);
    }

    private void Config()
    {
        NavigationManager.NavigateTo("/configuracion");
    }

    private void Pausar()
    {
        estado = Secuencia.DescansoCorto;
        if (timer == null)
        {
            timer = new System.Threading.Timer(Tick, null, 0, 200);
        }
        else
        {
            timer.Dispose();
            timer = null;
        }
    }

    private void EjecutarAccion()
    {
        switch (SecuenciaService.GetSecuenciaById(secuenciaId))
        {
            case Secuencia.Empezar:
                break;
            case Secuencia.Trabajo:
                break;
            case Secuencia.DescansoCorto:
                break;
            case Secuencia.DescansoLargo:
                break;
            case Secuencia.Finalizado:
                break;
        }
    }

    private void Tick(object state)
    {
        if (tiempo.TotalSeconds > 0)
        {
            tiempo = tiempo.Subtract(TimeSpan.FromSeconds(1));
            InvokeAsync(StateHasChanged);
        }
        else
        {
            timer.Dispose();
            timer = null;
        }
    }

    private void Detener()
    {
        timer?.Dispose();
        timer = null;
        tiempo = new TimeSpan(hours, minuts, seconds);
        StateHasChanged();
    }
}

<style>
    .contenedor {
        width: 100%;
        height: 100vh;
    }

    .colorRed {
        background: #FFCADE;
        color: #EF2D30;
    }

    .colorGreen {
        background: #E1F7E8;
        color: #01FE52;
    }

    .colorBlue {
        background: #C6DBFA;
        color: #0067FF;
    }

    .colorPurple {
        background: #DCC9F4;
        color: #7000FE;
    }

    .colorYellow {
        background: #FAF1C8;
        color: #FBD010;
    }

    .botones {
        position: absolute;
        right: 10px;
        top: 10px;
    }

    .configuracion {
        font-size: 2rem;
        position: absolute;
        right: 10px;
        bottom: 10px;
    }

    .target {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        width: 100%;
        height: 100vh;
        font-size: 3.8rem;
        font-weight: 400;
        font-family: Inter;
    }

    .radius {
        border-radius: 15px;
    }

    .estado{
        tex-aling: center;
    }

    .texto{
        position: absolute;
        width: 100%;
        text-align: center;
        color: white;
    }

</style>